#ifndef SEEPHIT_TAGS_H
#define SEEPHIT_TAGS_H

constexpr const char* arrVoidTags[] = 
{
  "area", 
  "base", 
  "br", 
  "col", 
  "command", 
  "hr", 
  "img", 
  "input", 
  "keygen", 
  "link",
  "meta", 
  "param", 
  "source"
};

constexpr const char *g_arrBoolAttrs[] = 
{
  "checked",
  "compact",
  "declare",
  "defer",
  "disabled",
  "ismap",
  "multiple",
  "noresize",
  "noshade",
  "nowrap",
  "readonly",
  "selected",
};

constexpr const char *g_arrTags[] = 
{
  "a",
  "abbr",
  "acronym",
  "address",
  "applet",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "basefont",
  "bdi",
  "bdo",
  "big",
  "blink",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "center",
  "circle",  // SVG
  "cite",
  "code",
  "col",
  "colgroup",
  "command",
  "content",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "dir",
  "div",
  "dl",
  "dt",
  "element",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "font",
  "footer",
  "form",
  "frame",
  "frameset",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "img",
  "input",
  "ins",
  "isindex",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "listing",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "multicol",
  "nav",
  "nextid",
  "noembed",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "plaintext",
  "pre",
  "progress",
  "q",
  "rb",
  "rp",
  "rt",
  "rtc",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "shadow",
  "slot",
  "small",
  "source",
  "spacer",
  "span",
  "strike",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "svg",
  "table",
  "tbody",
  "td",
  "template",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "tt",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  "xmp",
};

constexpr const char *g_arrCtrlTags[] = 
{
  // runtime loop <for var='n' from='1' to='10' inc='1'>
  // inc is optional, defaults to 1
  // Interval is half open like in a for loop 
  // when var == to loop ends
  "for", 
  
  // runtime if  <if cond=val> <div> Stuff rendered if cond is non-zero </div> </if> 
  "if",
  
  // meta node used as an outermost wrapper, not rendered
  "root"
  
};


#endif
